- name: Twitsy - Configuration on EC2 Instance
  hosts: all
  become: true
  become_user: root
  become_method: sudo
  remote_user: ec2-user # EC2 Instance user
  gather_facts: true
  vars:
    dockerhub_repository: "niteshraj"
  tasks:
    - name: facts
      debug:
        var: ansible_facts

    - name: Install Docker and Python3
      yum:
        name: "{{ item }}"
        state: latest
      loop:
        - docker
        - python3

    # - name: Install Docker-Compose
    #   get_url:
    #     url: "https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_facts['ansible_kernel'] }}-{{ ansible_facts['ansible_machine'] }}"
    #     dest: /usr/local/bin/docker-compose
    #     mode: 755  

    # - name: Start Docker service
    #   service:
    #     name: "docker"
    #     state: started

    # - name: Authenticate with DockerHub
    #   docker_login:
    #     username: "{{ lookup('env', 'DOCKERHUB_USERNAME') }}"
    #     password: "{{ lookup('env', 'DOCKERHUB_TOKEN') }}"

    # - name: Pull images and mysql
    #   docker_image:
    #     name: "{{ item.image }}"
    #     source: pull
    #     tag: "{{ item.tag }}"
    #     pull_timeout: 600
    #   loop:
    #     - { image: "{{ dockerhub_repository }}/fe", tag: latest }
    #     - { image: "{{ dockerhub_repository }}/be", tag: latest }
    #     - { image: "mysql", tag: "8.0" }

    # - name: Copy file for docker-compose
    #   copy:
    #     src: "ansible/template/docker-compose.yml.j2"
    #     dest: "~/docker-compose.yml"

    # - name: Copy init file for mysql container
    #   copy:
    #     src: "ansible/template/init.sql.j2"
    #     dest: "~/dbinit/init.sql"

    # # Testing
    # # - name: Start containers
    # #   command: "docker-compose up"

    # # Docker-Compose Download
    # #sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
    # #sudo chmod +x /usr/local/bin/docker-compose
    # #docker-compose version