name: Actions for Twitsy-Program

on:
  push:
    branches:
      - 'main'

jobs:
  Build-and-Push:
    name: Build and Push Image to Amazon ECR
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Set output variables
        id: constant-output
        run: |
          echo "ECR_REPO_NAME=my-ecr-repo" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push Docker image for frontend
      #   id: image-build-frontend
      #   uses: docker/build-push-action@v4
      #   with:
      #     push: true
      #     context: frontend
      #     dockerfile: frontend/Dockerfile
      #     tags: niteshraj/twitsyfe:latest

      # - name: Build and push Docker image for backend
      #   id: image-build-backend
      #   uses: docker/build-push-action@v4
      #   with:
      #     push: true
      #     context: backend
      #     dockerfile: backend/Dockerfile
      #     tags: niteshraj/twitsybe:latest

      #for terraform and ansible
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install dependencies for ansible 
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install ansible boto3 

      - name: Terraform apply to create EC2 instance
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd terraform
          ssh-keygen -t rsa -b 2048 -f my_key_pair
          terraform init 
          terraform plan
          terraform apply --auto-approve
          #    terraform destroy --auto-approve  # for removing existing Infra on aws  

      - name: Sleep task for delay
        run: |
          sleep 60
          
      - name: Ping with ansible
        run: |
          mkdir -p /home/runner/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /home/runner/.ssh/ec2-key.pem
          chmod 600 /home/runner/.ssh/ec2-key.pem
          ls -l /home/runner/.ssh/
          cd ansible
          ansible  -i ./inventory all -m ping

      # - name: Run Ansible playbook for configuration in EC2 instance
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      #     DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      #   run: |
      #     cd ansible
      #     ansible-playbook playbook.yml
        